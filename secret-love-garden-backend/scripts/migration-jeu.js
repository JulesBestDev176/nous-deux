#!/usr/bin/env node

/**
 * Script pour migrer les donn√©es JSON vers MongoDB Atlas
 * Usage: node scripts/migrate-jeux.js
 */

// Charger les variables d'environnement depuis le r√©pertoire parent
const path = require('path');
require('dotenv').config({ path: path.join(__dirname, '../.env') });

const mongoose = require('mongoose');
const { migrerDonnees } = require('./migration-data');

async function main() {
  try {
    console.log('üöÄ D√©but de la migration des jeux vers MongoDB Atlas...\n');

    // Connexion √† MongoDB Atlas
    const mongoUri = process.env.MONGODB_URI;
    if (!mongoUri) {
      throw new Error('‚ùå MONGODB_URI non trouv√© dans le fichier .env');
    }
    
    console.log(`üì° Connexion √† MongoDB Atlas...`);
    
    await mongoose.connect(mongoUri);
    
    console.log('‚úÖ Connexion MongoDB Atlas √©tablie\n');

    // Ex√©cuter la migration
    await migrerDonnees();

    console.log('\nüéâ Migration termin√©e avec succ√®s !');
    console.log('\nüìã Actions suivantes :');
    console.log('1. V√©rifiez vos collections MongoDB Atlas');
    console.log('2. Testez l\'API avec les nouveaux endpoints');
    console.log('3. Supprimez le fichier jeux.json s\'il existe');
    console.log('4. Red√©marrez votre serveur backend\n');

  } catch (error) {
    console.error('\n‚ùå Erreur lors de la migration :', error.message);
    if (error.message.includes('MONGODB_URI')) {
      console.error('\nüí° V√©rifiez que votre fichier .env contient MONGODB_URI');
      console.error('üí° Exemple: MONGODB_URI=mongodb+srv://user:pass@cluster.mongodb.net/dbname');
    }
    process.exit(1);
  } finally {
    // Fermer la connexion MongoDB
    await mongoose.connection.close();
    console.log('üì° Connexion MongoDB ferm√©e');
  }
}

// V√©rifier que le script est ex√©cut√© directement
if (require.main === module) {
  main();
}

module.exports = main;